import Vue from "vue";
import TKApp from "@/primary/app/TKApp.vue";
import vuetify from "@/plugins/vuetify";
import { loadLocaleMessages } from "@/i18n";
import VueI18n, { LocaleMessages } from "vue-i18n";
import router from "./router";
import store from "./store";

// ////////////////////////////////////////////////////////////////////////////
// MATOMO
// ////////////////////////////////////////////////////////////////////////////

import VueMatomo from "vue-matomo";
import TKConfigurationModule from "./store/modules/configuration/TKConfigurationModule";
import { TKReadGeneralConfiguration } from "./domain/opsmapConfig/TKOpsmapConfiguration";

Vue.use(VueMatomo, {
  // Configure your matomo server and site by providing
  host: "https://cartong.matomo.cloud",
  // Changes the default .js and .php endpoint's filename
  // Default: 'matomo'
  trackerFileName: "matomo",
  siteId: 3,

  // Overrides the autogenerated tracker endpoint entirely
  // Default: undefined
  // trackerUrl: 'https://example.com/whatever/endpoint/you/have',

  // Overrides the autogenerated tracker script path entirely
  // Default: undefined
  // trackerScriptUrl: 'https://example.com/whatever/script/path/you/have',

  // Enables automatically registering pageviews on the router
  router: router,

  // Enables link tracking on regular links. Note that this won't
  // work for routing links (ie. internal Vue router links)
  // Default: true
  // enableLinkTracking: true,

  // Require consent before sending tracking information to matomo
  // Default: false
  // requireConsent: false,

  // Whether to track the initial page view
  // Default: true
  trackInitialView: true,

  // Run Matomo without cookies
  // Default: false
  disableCookies: true,

  // Require consent before creating matomo session cookie
  // Default: false
  // ** AKA disable matomo session cookie
  requireCookieConsent: true,

  // Enable the heartbeat timer (https://developer.matomo.org/guides/tracking-javascript-guide#accurately-measure-the-time-spent-on-each-page)
  // Default: false
  enableHeartBeatTimer: true,

  // Set the heartbeat timer interval
  // Default: 15
  heartBeatTimerInterval: 15

  // Whether or not to log debug information
  // Default: false
  // debug: false,

  // UserID passed to Matomo (see https://developer.matomo.org/guides/tracking-javascript-guide#user-id)
  // Default: undefined
  // userId: undefined,

  // Share the tracking cookie across subdomains (see https://developer.matomo.org/guides/tracking-javascript-guide#measuring-domains-andor-sub-domains)
  // Default: undefined, example '*.example.com'
  // cookieDomain: undefined,

  // Tell Matomo the website domain so that clicks on these domains are not tracked as 'Outlinks'
  // Default: undefined, example: '*.example.com'
  // domains: undefined,

  // A list of pre-initialization actions that run before matomo is loaded
  // Default: []
  // Example: [
  //   ['API_method_name', parameter_list],
  //   ['setCustomVariable','1','VisitorType','Member'],
  //   ['appendToTrackingUrl', 'new_visit=1'],
  //   etc.
  // ]
  // preInitActions: [],

  // A function to determine whether to track an interaction as a site search
  // instead of as a page view. If not a function, all interactions will be
  // tracked as page views. Receives the new route as an argument, and
  // returns either an object of keyword, category (optional) and resultsCount
  // (optional) to track as a site search, or a falsey value to track as a page
  // view.
  // Default: false, i.e. track all interactions as page views
  // Example: (to) => {
  //   if (to.query.q && to.name === 'search') {
  //     return { keyword: to.query.q, category: to.params.category }
  //   } else {
  //    return null
  //   }
  // }
  // trackSiteSearch: false
});

Vue.config.productionTip = false;

const messagesCandidates = loadLocaleMessages();
TKReadGeneralConfiguration(
  `${process.env.BASE_URL}/data/demo/general_config.json`,
  messagesCandidates
).then(config => {
  TKConfigurationModule.setConfiguration(config);

  // Handle locale definition + default
  const messages: LocaleMessages = {};
  TKConfigurationModule.configuration.languages.forEach(key => {
    messages[key] = messagesCandidates[key];
  });

  const defaultLocale = TKConfigurationModule.configuration.languageDefault;

  const i18n = new VueI18n({
    locale: defaultLocale,
    fallbackLocale: "en",
    messages: messages
  });

  // Update vuetify options.
  vuetify.framework.theme.dark =
    TKConfigurationModule.configuration.options.dark;

  new Vue({
    router,
    vuetify,
    i18n,
    store,
    render: h => h(TKApp)
  }).$mount("#app");
});
